name: "Checkout Repo"

description: "Action to checkout GIT Repository with special reference handling."

branding:
  icon: "download"
  color: "green"

inputs:
  repository:
    description: 'Repository name with owner. For example, actions/checkout'
    default: ${{ github.repository }}
  ref:
    description: >
      The branch, tag or SHA to checkout. When checking out the repository that
      triggered a workflow, this defaults to the reference or SHA for that
      event.  Otherwise, uses the default branch.
    required: false
    default: ${{ github.ref }}
  alt_ref:
    description: >
      The alternative branch, tag or SHA to checkout. When checking out the repository that
      triggered a workflow, this defaults to the reference or SHA for that event. Otherwise, uses the default branch.
    required: false
  token:
    description: >
      Personal access token (PAT) used to fetch the repository. The PAT is configured
      with the local git config, which enables your scripts to run authenticated git
      commands. The post-job step removes the PAT.
      We recommend using a service account with the least permissions necessary.
      Also when generating a new PAT, select the least scopes necessary.
      [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
    required: false
    default: ${{ github.token }}
  path:
    description: 'Relative path under $GITHUB_WORKSPACE to place the repository'
  lfs:
    description: 'Whether to download Git-LFS files'
    default: false
  submodules:
    description: >
      Whether to checkout submodules: `true` to checkout submodules or `recursive` to
      recursively checkout submodules.
    required: false
    default: false

runs:
  using: "composite"
  steps:
    # Run python (environment variables has to be set separately https://github.com/actions/runner/issues/665)
    - name: Run handle reference on linux/mac
      id: pre-checkout-win
      if: ${{ runner.os != 'Windows' }}
      env:
        INPUT_TOKEN: ${{ inputs.token }}
        INPUT_REPOSITORY:  ${{ inputs.repository }}
        INPUT_REF: ${{ inputs.ref }}
        INPUT_ALT_REF:  ${{ inputs.alt_ref }}
      shell: bash
      run: |
        python3 -m venv ~/venvs/venv3
        source ~/venvs/venv3/bin/activate
        echo "*************** Pre-Run Checkout ***************""
        pip install -r requirements.txt
        python main.py
        deactivate
        python -m venv ~/venvs/venv3 --clear
        rm -rf ~/venvs/venv3
        echo "******************* Checkout *******************""

    # Run python (environment variables has to be set separately https://github.com/actions/runner/issues/665)
    - name: Run handle reference on windows
      id: pre-checkout-other
      if: ${{ runner.os == 'Windows' }}
      env:
        INPUT_TOKEN: ${{ inputs.token }}
        INPUT_REPOSITORY:  ${{ inputs.repository }}
        INPUT_REF: ${{ inputs.ref }}
        INPUT_ALT_REF:  ${{ inputs.alt_ref }}
      shell: cmd
      run: |
        pip install virtualenv
        python -m venv venv3
        .\venv3\Scripts\activate
        echo "*************** Pre-Run Checkout ***************""
        pip install -r requirements.txt
        python main.py
        deactivate
        python -m venv ~/venvs/venv3 --clear
        echo "******************* Checkout *******************""
  
    # Call normal checkout action: see https://github.com/actions/checkout
    - name: Checkout code
      if: ${{ runner.os != 'Windows' }}
      uses: actions/checkout@v3
      with:
        repository:  ${{ inputs.repository }}
        ref:  ${{ steps.pre-checkout-other.outputs.ref }}
        token: ${{ inputs.token }}
        path: ${{ inputs.path }}
        lfs: ${{ inputs.lfs }}

    # Call normal checkout action: see https://github.com/actions/checkout
    - name: Checkout code
      if: ${{ runner.os == 'Windows' }}
      uses: actions/checkout@v3
      with:
        repository:  ${{ inputs.repository }}
        ref:  ${{ steps.pre-checkout-win.outputs.ref }}
        token: ${{ inputs.token }}
        path: ${{ inputs.path }}
        lfs: ${{ inputs.lfs }}

    # Handle git lfs stuff: see https://github.com/nschloe/action-cached-lfs-checkout
    - name: Git LFS Pull in base path
      if: ${{ inputs.lfs == 'true' &&  inputs.path == ''}}
      run: git lfs pull
      shell: bash

    # Handle git lfs stuff: see https://github.com/nschloe/action-cached-lfs-checkout
    - name: Git LFS Pull in special path
      if: ${{ inputs.lfs == 'true' &&  inputs.path != ''}}
      run: |
        cd ${{ inputs.path }}
        git lfs pull
      shell: bash